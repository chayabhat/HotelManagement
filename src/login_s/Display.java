/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package login_s;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Display extends javax.swing.JFrame {

    /**
     * Creates new form Display
     */
    
    private static Connection con;
    
    static{
        con=javaconnect.ConnecrDB();
    
    
    }
    public Display() {
        
        
      
        initComponents();
        
          
        fetchRooms();
        fetchMenu();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Room_Table = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        MealsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Room_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(Room_Table);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 640, 700));

        MealsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(MealsTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 0, 510, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MealsTable;
    private javax.swing.JTable Room_Table;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private void fetchMenu() {
        try{
        Statement stmt=con.createStatement();
        ResultSet rs=stmt.executeQuery("select * from MealsTable");
        
        Vector<String> colNames=new Vector<>();
        colNames.add("Food Type");
        colNames.add("Tax");
        colNames.add("Sub Total");
        colNames.add("Total");
        colNames.add("Check In");
        colNames.add("Check Out");
        
        Vector<Vector> rowData=new Vector<>();
        
        while(rs.next()){
            
        Vector<String> row=new Vector<>();
        row.add(rs.getString("FoodType"));
        row.add(rs.getDouble("Tax")+"");
        row.add(rs.getDouble("SubTotal")+"");
        row.add(rs.getDouble("Total")+"");
        row.add(rs.getString("Check-In"));
        row.add(rs.getString("Check-Out"));
            
            rowData.add(row);
          
        }
        DefaultTableModel dft=new DefaultTableModel(rowData,colNames);
        MealsTable.setModel(dft);
        //jScrollPane1 pane=new jScrollPane1(MealsTable);
       // jScrollPane1.setModel(dft);
        
        }
        catch(SQLException sql){
            sql.printStackTrace();
        }
        }

    private void fetchRooms() {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
         try{
        Statement stmt=con.createStatement();
        ResultSet rs=stmt.executeQuery("select * from RoomDetails");
        
        Vector<String> colNames=new Vector<>();
        colNames.add("Room No");
        colNames.add("Room Extension Number");
        colNames.add("Room Type");
        colNames.add("Check In");
        colNames.add("Check Out");
        colNames.add("Tax");
        colNames.add("Sub Total");
        colNames.add("Total");
        
        
        
        Vector<Vector> rowData=new Vector<>();
        
        while(rs.next()){
            
        Vector<String> row=new Vector<>();
        row.add(rs.getInt("RoomNo:")+"");
        row.add(rs.getInt("RoomExtNo:")+"");
        row.add(rs.getString("RoomType:"));
        row.add(rs.getString("Check-In:"));
        row.add(rs.getString("Check-Out:"));
        row.add(rs.getInt("Tax:")+"");
        row.add(rs.getInt("SubTotal:")+"");
        row.add(rs.getInt("Total:")+"");
        
            
            rowData.add(row);
          
        }
        DefaultTableModel dft=new DefaultTableModel(rowData,colNames);
        
        Room_Table.setModel(dft);
        
        }
        catch(SQLException sql){
            sql.printStackTrace();
        }
    
    
    }
}
